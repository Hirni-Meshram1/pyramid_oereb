# -*- coding: utf-8 -*-
from json import dumps

from pyramid.response import Response

from pyramid_oereb.lib.renderer import Base


class Json(Base):
    def __call__(self, value, system):
        """
        Returns the JSON encoded extract, according to the specification.
        :param value: A tuple containing the generated extract record and the params dictionary.
        :type value: tuple
        :param system: The available system properties.
        :type system: dict
        :return: The JSON encoded extract.
        :rtype: str
        """
        response = self.get_response(system)
        if isinstance(response, Response) and response.content_type == response.default_content_type:
            response.content_type = 'application/json'

        return self.__render__(value[0], value[1])

    def __render__(self, extract, params):
        """
        Serializes the extract record.
        :param extract: The extract record
        :type extract: pyramid_oereb.lib.records.extract.ExtractRecord
        :param params: The params dictionary generated by the webservice.
        :type params: dict
        :return: The JSON encoded extract.
        :rtype: str
        """
        extract_dict = {
            'CreationDate': self.date_time(extract.creation_date),
            'ConcernedTheme': [],
            'NotConcernedTheme': [],
            'ThemeWithoutData': [],
            'isReduced': params.get('flavour') == 'reduced',
            'LogoPLRCadastre': extract.logo_plr_cadastre.encode(),
            'FederalLogo': extract.federal_logo.encode(),
            'CantonalLogo': extract.cantonal_logo.encode(),
            'MunicipalityLogo': extract.municipality_logo.encode(),
            'ExtractIdentifier': extract.extract_identifier,
            'BaseData': extract.base_data
        }
        if extract.electronic_signature:
            extract_dict['ElectronicSignature'] = extract.electronic_signature
        if extract.qr_code:
            extract_dict['QRCode'] = extract.qr_code
        if extract.general_information:
            extract_dict['GeneralInformation'] = extract.general_information
        return dumps(extract_dict)
